#!/usr/bin/env python3

import os
from pathlib import Path
import subprocess as sub
import sys
from typing import List


def get_extensions(package_file_path: Path) -> List[str]:
    """
    Returns a list of npm packages to install globally using `npm i -g`
    """
    with open(package_file_path) as f:
        extensions = f.read().splitlines()

    return extensions


def vscode_ext_install(extension: str):
    """
    Attempt to install a specific node package globally

    :param package: The name of an npm installable package
    """
    try:
        sub.run(["code", "--install-extension", extension, "--force"], check=True, encoding='utf-8')
    except sub.CalledProcessError:
        print(f"Problem encountered when installing {extension}!\n",
              "Review the output above or manually debug the issue later")
        sys.exit(1)


if __name__ == "__main__":
    """
    @TODO: Ensure that this program installs/configures:

    - [x] settings file
    - [x] keybindings file
    - [ ] launch file
    - [ ] snippets folder
    - [ ] VSCode extensions and extension configuration
    - [ ] Workspaces folder

    Potentially some of the above need to be done in the symlinks script
    """
    if os.getenv("DOTFILES_ROOT"):
        DOTFILES_ROOT = Path(os.getenv("DOTFILES_ROOT"))

    if not DOTFILES_ROOT.exists():
        print(f"the DOTFILES_ROOT path ({DOTFILES_ROOT}) appears to be missing!")
        sys.exit(1)

    extensions = get_extensions(DOTFILES_ROOT/'data'/'vscode-ext.txt')

    for extension in extensions:
        print(extension)
        vscode_ext_install(extension)
