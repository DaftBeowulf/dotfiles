#!/usr/bin/env python3
# Ensure that the systems background services are running

import subprocess as sub
import sys
from typing import List


def get_services_list() -> List[str]:
    """
    Run `brew services list` in a shell and return a list of each service name installed
    """
    try:
        CMD = sub.run(
            ["brew", "services", "list"],
            capture_output=True,
            check=True,
            encoding="utf-8",
        )
    except sub.CalledProcessError:
        print("Brew services is broken, run `brew doctor` to debug")
        sys.exit(1)

    return [service.split(" ")[0] for service in CMD.stdout.splitlines()[1:]]


def enable(service_list) -> None:
    """
    Given a list of services for `brew services` to run, attempt to run each of them
    """
    for service in service_list:
        print(f"Enabling {service}")
        try:
            CMD = sub.run(
                ["brew", "services", "start", service],
                capture_output=True,
                check=True,
                encoding="utf-8",
            )
            print(CMD.stdout)
        except sub.CalledProcessError:
            print(f"An error was encounted starting {service}, manual debugging will be necessary")
            sys.exit(1)


def open_apps():
    """
    Opens newly installed applications to begin their configuration process
    """
    APPS = ["Alfred 4", "Backup and Sync", "Docker", "Mjolnir", "Postgres", "zoom.us"]

    for app in APPS:
        try:
            CMD = sub.run(
                ["open", f"/Applications/{app}.app"],
                check=True
            )
        except sub.CalledProcessError:
            print(f"An error was encountered opening {app}, manual debugging will be necessary")
            sys.exit(1)


if __name__ == "__main__":
    services_list = get_services_list()
    enable(services_list)
    open_apps()
